#!/usr/bin/env php
<?php

$STDIN = fopen('php://stdin', 'w');



$zf_path = @$_SERVER['argv'][1];
$first = true;
do {
    if (!is_dir($zf_path . '/Zend')) {
        if ($first) {
            $first = false;
        } else {
            echo 'Zend director not found. ';
        }
        echo 'Path to ZF library: ';
        flush();
    } else {
        break;
    }
    $zf_path = trim(fgets($STDIN));
} while (true);

set_include_path(
    realpath($zf_path) . PATH_SEPARATOR . 
    '../../../' . PATH_SEPARATOR .
    get_include_path()
);

require 'Zend/Loader/StandardAutoloader.php';

$loader = new Zend_Loader_StandardAutoloader();
$loader->setFallbackAutoloader(true);
$loader->register();

$ref = new Zend_Reflection_Class('Zend_Search_Lucene_Interface');

class NullDocblock extends Zend_CodeGenerator_Php_Docblock
{
    public function generate() {}
}

$source = "// Proxy methods automatically generated by " . basename($_SERVER['PHP_SELF']) . " on " . date('Y-m-d H:i:s') . "\n\n";
foreach ($ref->getMethods() as $method) {
    $x = Zend_CodeGenerator_Php_Method::fromReflection($method);

    $d = Zend_CodeGenerator_Php_Docblock::fromReflection($method->getDocblock());

    $x->setDocblock(new NullDocblock);
    if ($method->isAbstract()) {
        $params = array();
        foreach ($method->getParameters() as $param) {
            $params[] = '$' . $param->getName();
        }
        if ($method->isStatic()) {
            $body = 'return Zend_Search_Lucene::' . $method->getName();
        } else {
            $body = 'return $this->_index->' . $method->getName();
        }
        $body .= '(' . implode(', ', $params) . ');';
        $x->setBody($x->getIndentation() . '    ' . $body);
    }
    $d->setIndentation($x->getIndentation());
    $source .= preg_replace("#\\*\n\s+\\*/#", '*/', $d->generate());
    $source .= $x->generate() . "\n";
}

file_put_contents('Proxy.php',
    str_replace('/** @proxyimpl */', trim($source), file_get_contents('Proxy.php.in'))
);

